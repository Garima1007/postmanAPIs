{
	"info": {
		"_postman_id": "2b01197b-ba52-4002-8f2b-f68f83b479ae",
		"name": "API Testing Assignment",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "1277254"
	},
	"item": [
		{
			"name": "Users List",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"//Validate the Status code",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Status code name has string OK\", function () {",
							"    pm.response.to.have.status(\"OK\");",
							"});",
							"",
							"//Validate endpoint does not return unexpected status codes",
							"pm.test(\"The endpoint does not return unexpected status codes\", function () {",
							"    const unexpectedStatusCode = [404, 400, 401, 403];",
							"    pm.response.to.not.have.status(unexpectedStatusCode);",
							"});",
							"",
							"//Validate response time is less than 200ms",
							"pm.test(\"Response time is less than 200ms\", function () {",
							"    pm.expect(pm.response.responseTime).to.be.below(200);",
							"});",
							"",
							"//Validate response headers are present",
							"pm.test(\"Verify Content-Type header is present\", function () {",
							"    pm.response.to.have.header(\"Content-Type\");",
							"});",
							"",
							"pm.test(\"Verify Content-Type header is application/json; charset=utf-8\", function () {",
							"    pm.response.to.be.header(\"Content-Type\",\"application/json; charset=utf-8\"); ",
							"});",
							"",
							"pm.test(\"Verify Date header is present\", function () {",
							"    pm.response.to.have.header(\"Date\");",
							"});",
							"",
							"pm.test(\"Verify Content-Encoding header is available\", function () {",
							"\tpm.response.to.have.header(\"Content-Encoding\")",
							"});",
							"",
							"//Verify the page number of the API Response",
							"pm.test(\"Verify that the page number of the API Response is 1\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.page).to.eql(1);",
							"});",
							"",
							"//Verify the number of users shown per page",
							"pm.test(\"Verify the number of users shown per page is 6\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.per_page).to.eql(6);",
							"    console.log(jsonData.data.length);",
							"});",
							"",
							"//Verify the number of users shown per page is not more than 6",
							"pm.test(\"Verify the number of users shown per page is not more than 6\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.per_page).not.to.be.above(6);",
							"});",
							"",
							"//Verify the total number of users",
							"pm.test(\"Verify the total number of users is 12\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.total).to.eql(12);",
							"});",
							"",
							"//Verify the total number of users",
							"pm.test(\"Verify the total number of users is not more than 12\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.total).not.to.be.above(12);",
							"});",
							"",
							"//Verify the total number of pages which are there in the API",
							"pm.test(\"Verify the total number of pages which are there in the API is 2\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.total_pages).to.eql(2);",
							"});",
							"",
							"//Verify the total number of pages which are there in the API",
							"pm.test(\"Verify the total number of pages which are there in the API is not more than 2\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.expect(jsonData.total_pages).not.to.be.above(2);",
							"});",
							"",
							"//Validate JSON schema",
							"var schema = {",
							"  \"$schema\": \"http://json-schema.org/draft-04/schema#\",",
							"  \"type\": \"object\",",
							"  \"properties\": {",
							"    \"page\": {",
							"      \"type\": \"integer\"",
							"    },",
							"    \"per_page\": {",
							"      \"type\": \"integer\"",
							"    },",
							"    \"total\": {",
							"      \"type\": \"integer\"",
							"    },",
							"    \"total_pages\": {",
							"      \"type\": \"integer\"",
							"    },",
							"    \"data\": {",
							"      \"type\": \"array\",",
							"      \"items\": [",
							"        {",
							"          \"type\": \"object\",",
							"          \"properties\": {",
							"            \"id\": {",
							"              \"type\": \"integer\"",
							"            },",
							"            \"email\": {",
							"              \"type\": \"string\"",
							"            },",
							"            \"first_name\": {",
							"              \"type\": \"string\"",
							"            },",
							"            \"last_name\": {",
							"              \"type\": \"string\"",
							"            },",
							"            \"avatar\": {",
							"              \"type\": \"string\"",
							"            }",
							"          },",
							"          \"required\": [",
							"            \"id\",",
							"            \"email\",",
							"            \"first_name\",",
							"            \"last_name\",",
							"            \"avatar\"",
							"          ]",
							"        },",
							"        {",
							"          \"type\": \"object\",",
							"          \"properties\": {",
							"            \"id\": {",
							"              \"type\": \"integer\"",
							"            },",
							"            \"email\": {",
							"              \"type\": \"string\"",
							"            },",
							"            \"first_name\": {",
							"              \"type\": \"string\"",
							"            },",
							"            \"last_name\": {",
							"              \"type\": \"string\"",
							"            },",
							"            \"avatar\": {",
							"              \"type\": \"string\"",
							"            }",
							"          },",
							"          \"required\": [",
							"            \"id\",",
							"            \"email\",",
							"            \"first_name\",",
							"            \"last_name\",",
							"            \"avatar\"",
							"          ]",
							"        },",
							"        {",
							"          \"type\": \"object\",",
							"          \"properties\": {",
							"            \"id\": {",
							"              \"type\": \"integer\"",
							"            },",
							"            \"email\": {",
							"              \"type\": \"string\"",
							"            },",
							"            \"first_name\": {",
							"              \"type\": \"string\"",
							"            },",
							"            \"last_name\": {",
							"              \"type\": \"string\"",
							"            },",
							"            \"avatar\": {",
							"              \"type\": \"string\"",
							"            }",
							"          },",
							"          \"required\": [",
							"            \"id\",",
							"            \"email\",",
							"            \"first_name\",",
							"            \"last_name\",",
							"            \"avatar\"",
							"          ]",
							"        },",
							"        {",
							"          \"type\": \"object\",",
							"          \"properties\": {",
							"            \"id\": {",
							"              \"type\": \"integer\"",
							"            },",
							"            \"email\": {",
							"              \"type\": \"string\"",
							"            },",
							"            \"first_name\": {",
							"              \"type\": \"string\"",
							"            },",
							"            \"last_name\": {",
							"              \"type\": \"string\"",
							"            },",
							"            \"avatar\": {",
							"              \"type\": \"string\"",
							"            }",
							"          },",
							"          \"required\": [",
							"            \"id\",",
							"            \"email\",",
							"            \"first_name\",",
							"            \"last_name\",",
							"            \"avatar\"",
							"          ]",
							"        },",
							"        {",
							"          \"type\": \"object\",",
							"          \"properties\": {",
							"            \"id\": {",
							"              \"type\": \"integer\"",
							"            },",
							"            \"email\": {",
							"              \"type\": \"string\"",
							"            },",
							"            \"first_name\": {",
							"              \"type\": \"string\"",
							"            },",
							"            \"last_name\": {",
							"              \"type\": \"string\"",
							"            },",
							"            \"avatar\": {",
							"              \"type\": \"string\"",
							"            }",
							"          },",
							"          \"required\": [",
							"            \"id\",",
							"            \"email\",",
							"            \"first_name\",",
							"            \"last_name\",",
							"            \"avatar\"",
							"          ]",
							"        },",
							"        {",
							"          \"type\": \"object\",",
							"          \"properties\": {",
							"            \"id\": {",
							"              \"type\": \"integer\"",
							"            },",
							"            \"email\": {",
							"              \"type\": \"string\"",
							"            },",
							"            \"first_name\": {",
							"              \"type\": \"string\"",
							"            },",
							"            \"last_name\": {",
							"              \"type\": \"string\"",
							"            },",
							"            \"avatar\": {",
							"              \"type\": \"string\"",
							"            }",
							"          },",
							"          \"required\": [",
							"            \"id\",",
							"            \"email\",",
							"            \"first_name\",",
							"            \"last_name\",",
							"            \"avatar\"",
							"          ]",
							"        }",
							"      ]",
							"    }",
							"  },",
							"  \"required\": [",
							"    \"page\",",
							"    \"per_page\",",
							"    \"total\",",
							"    \"total_pages\",",
							"    \"data\"",
							"  ]",
							"}",
							"",
							"var jsonResponse = pm.response.json();",
							"pm.test('Validate response against schema', function () {",
							"  pm.expect(tv4.validate(jsonResponse, schema)).to.be.true;",
							"});",
							"",
							"",
							"//Validate that the data is not null",
							"var resBody = pm.response.json();",
							"pm.test(\"Verify id is not null\", function () {",
							"    pm.expect(resBody.data.id).to.not.null;",
							"});",
							"",
							"var resBody = pm.response.json();",
							"pm.test(\"Verify email is not null\", function () {",
							"    pm.expect(resBody.data.email).to.not.null;",
							"});",
							"",
							"var resBody = pm.response.json();",
							"pm.test(\"Verify first name is not null\", function () {",
							"    pm.expect(resBody.data.first_name).to.not.null;",
							"});",
							"",
							"var resBody = pm.response.json();",
							"pm.test(\"Verify last name is not null\", function () {",
							"    pm.expect(resBody.data.last_name).to.not.null;",
							"});",
							"",
							"var resBody = pm.response.json();",
							"pm.test(\"Verify avatar not null\", function () {",
							"    pm.expect(resBody.data.avatar).to.not.null;",
							"});",
							"",
							"//Validate that the id is not zero",
							"pm.test(\"Validate that the id is not 0\", function (){",
							"    var responseJson = pm.response.json();",
							"    pm.expect(\"responseJson.data.id\").to.not.eql(0);",
							"});",
							"",
							"//Validate Specific user's data",
							"pm.test(\"Verify user 1 data\", function () {",
							"    const responseJson = pm.response.json();",
							"    const user = responseJson.data[0];",
							"",
							"    pm.expect(user.id).to.eql(1);",
							"    pm.expect(user.first_name).to.eql(\"George\");",
							"    pm.expect(user.last_name).to.eql(\"Bluth\");",
							"    pm.expect(user.email).to.eql(\"george.bluth@reqres.in\");",
							"    pm.expect(user.avatar).to.eql(\"https://reqres.in/img/faces/1-image.jpg\");",
							"});",
							"",
							"pm.test(\"Verify user 2 data\", function () {",
							"    const responseJson = pm.response.json();",
							"    const user = responseJson.data[1];",
							"",
							"    pm.expect(user.id).to.eql(2);",
							"    pm.expect(user.first_name).to.eql(\"Janet\");",
							"    pm.expect(user.last_name).to.eql(\"Weaver\");",
							"    pm.expect(user.email).to.eql(\"janet.weaver@reqres.in\");",
							"    pm.expect(user.avatar).to.eql(\"https://reqres.in/img/faces/2-image.jpg\");",
							"});",
							"",
							"pm.test(\"Verify user 3 data\", function () {",
							"    const responseJson = pm.response.json();",
							"    const user = responseJson.data[2];",
							"",
							"    pm.expect(user.id).to.eql(3);",
							"    pm.expect(user.first_name).to.eql(\"Emma\");",
							"    pm.expect(user.last_name).to.eql(\"Wong\");",
							"    pm.expect(user.email).to.eql(\"emma.wong@reqres.in\");",
							"    pm.expect(user.avatar).to.eql(\"https://reqres.in/img/faces/3-image.jpg\");",
							"});",
							"",
							"pm.test(\"Verify user 4 data\", function () {",
							"    const responseJson = pm.response.json();",
							"    const user = responseJson.data[3];",
							"",
							"    pm.expect(user.id).to.eql(4);",
							"    pm.expect(user.first_name).to.eql(\"Eve\");",
							"    pm.expect(user.last_name).to.eql(\"Holt\");",
							"    pm.expect(user.email).to.eql(\"eve.holt@reqres.in\");",
							"    pm.expect(user.avatar).to.eql(\"https://reqres.in/img/faces/4-image.jpg\");",
							"});",
							"",
							"pm.test(\"Verify user 5 data\", function () {",
							"    const responseJson = pm.response.json();",
							"    const user = responseJson.data[4];",
							"",
							"    pm.expect(user.id).to.eql(5);",
							"    pm.expect(user.first_name).to.eql(\"Charles\");",
							"    pm.expect(user.last_name).to.eql(\"Morris\");",
							"    pm.expect(user.email).to.eql(\"charles.morris@reqres.in\");",
							"    pm.expect(user.avatar).to.eql(\"https://reqres.in/img/faces/5-image.jpg\");",
							"});",
							"",
							"pm.test(\"Verify user 6 data\", function () {",
							"    const responseJson = pm.response.json();",
							"    const user = responseJson.data[5];",
							"",
							"    pm.expect(user.id).to.eql(6);",
							"    pm.expect(user.first_name).to.eql(\"Tracey\");",
							"    pm.expect(user.last_name).to.eql(\"Ramos\");",
							"    pm.expect(user.email).to.eql(\"tracey.ramos@reqres.in\");",
							"    pm.expect(user.avatar).to.eql(\"https://reqres.in/img/faces/6-image.jpg\");",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/api/users/ ",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"users",
						" "
					]
				}
			},
			"response": []
		},
		{
			"name": "User 4 Details",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Store user information\", function () {",
							"  const responseBody = pm.response.json();",
							"  const userId = responseBody.data.id;",
							"  const userEmail = responseBody.data.email;",
							"  const firstName = responseBody.data.first_name;",
							"  const lastName = responseBody.data.last_name;",
							"  const supportUrl = responseBody.support.url;",
							"  const supportText = responseBody.support.text;",
							"  ",
							"  // Store the values in variables",
							"  pm.variables.set(\"userId\", userId);",
							"  pm.variables.set(\"userEmail\", userEmail);",
							"  pm.variables.set(\"firstName\", firstName);",
							"  pm.variables.set(\"lastName\", lastName);",
							"});",
							"",
							"pm.test(\"Validate ID received in the response matches with the set variable userID\", function () {",
							"    const responseBody = pm.response.json();",
							"    const responseValue = responseBody.data.id; ",
							"",
							"    const expectedValue = pm.variables.get(\"userId\"); ",
							"",
							"    pm.expect(responseValue).to.eql(expectedValue);",
							"    console.log(responseValue);",
							"});",
							"",
							"",
							"pm.test(\"Validate email received in the response matches with the set variable  userEmail\", function () {",
							"    const responseBody = pm.response.json();",
							"    const responseValue = responseBody.data.email; ",
							"",
							"    const expectedValue = pm.variables.get(\"userEmail\"); ",
							"",
							"    pm.expect(responseValue).to.eql(expectedValue);",
							"    console.log(responseValue);",
							"});",
							"",
							"",
							"pm.test(\"Validate first_name received in the response matches with the set variable userName\", function () {",
							"    const responseBody = pm.response.json();",
							"    const responseValue = responseBody.data.first_name; ",
							"",
							"    const expectedValue = pm.variables.get(\"firstName\"); ",
							"",
							"    pm.expect(responseValue).to.eql(expectedValue);",
							"    console.log(responseValue);",
							"});",
							"",
							"",
							"pm.test(\"Validate last_name received in the response matches with the set variable userName\", function () {",
							"    const responseBody = pm.response.json();",
							"    const responseValue = responseBody.data.last_name; ",
							"",
							"    const expectedValue = pm.variables.get(\"lastName\"); ",
							"",
							"    pm.expect(responseValue).to.eql(expectedValue);",
							"    console.log(responseValue);",
							"});",
							"",
							"",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "{{url}}/api/users/4 ",
					"host": [
						"{{url}}"
					],
					"path": [
						"api",
						"users",
						"4 "
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url",
			"value": "https://reqres.in",
			"type": "string"
		}
	]
}